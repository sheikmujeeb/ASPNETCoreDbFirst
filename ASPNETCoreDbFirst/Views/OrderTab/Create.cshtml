@model ASPNETCoreDbFirst.Models.OrderTabVM

@{
    ViewData["Title"] = "Create";
}

<html lang="en">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
              function calculateTotalAmount() {
                var quantity = parseInt($('#Quantity').val()) || 0;
                var unitprice = parseFloat($('#UnitPrice').val()) || 0;
                var totalAmount = quantity * unitprice;
                $('#SubTotal').val(totalAmount.toFixed(2));
                calculateNetAmount();
            }

            function calculateNetAmount() {
                var subtotal = parseFloat($('#SubTotal').val()) || 0;
                var discount = parseFloat($('#Discount').val()) || 0;
                var shippingFee = parseFloat($('#ShippingFee').val()) || 0;

                var discountAmount = (discount / 100) * subtotal;
                var netAmount = subtotal - discountAmount + shippingFee;

                $('#NetTotal').val(netAmount.toFixed(2));
            }

            $('#Quantity, #UnitPrice').on('input', function () {
                calculateTotalAmount();
            });

            $('#SubTotal, #Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });

            $('#ProductId').change(function () {
                calculateAmount();
            });
            $('#Productid','#Quantity','#UnitPrice').on('input',function () {
                addItems();
            });
            

            function calculateAmount() {
                var productId = $('#ProductId').val();

                // Make an AJAX call to fetch the unit price based on productId
                $.ajax({
                    url: '/OrderTab/getProductByUnitPrice',
                    type: 'GET',
                    data: { productId: productId },
                    success: function (data) {
                        var unitPrice = parseFloat(data);
                        alert("Success");
                        $('#UnitPrice').val(unitPrice);
                    },
                    error: function () {
                        alert('Error fetching unit price.');
                    }
                    
                });
            }
            fetchItems();
            function fetchItems() {
                $.ajax({
                    url: '@Url.Action("GetItems", "OrderTab")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        // Clear existing rows
                        $('#orderedlist tbody').empty();

                        // Iterate through the data and create table rows
                        $.each(data, function (index, item) {
                            var row = '<tr>' +
                                '<td>' + item.productId + '</td>' +
                                '<td>' + item.quantity + '</td>' +
                                '<td>' + item.unitprice + '</td>' +
                                '<td>' + item.totalAmount + '</td>' +
                                '</tr>';
                            $('#orderedlist tbody').append(row);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error: ' + status + error);
                    }
                });
            }
            // Function to add a new item
            $('#addItemButton').click(function () {
                var newItem = {
                    ProductId: $('#newProductId').val(),
                    Quantity: $('#newQuantity').val(),
                    UnitPrice: $('#newUnitPrice').val()
                };

                $.ajax({
                    url: '@Url.Action("AddItem", "OrderTab")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(newItem),
                    success: function (data) {
                        fetchItems();
                        $('#newProductId').val('');
                        $('#newQuantity').val('');
                        $('#newUnitPrice').val('');
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error: ' + status + error);
                    }
                });
            });

            // $('#ProductId').change(function () {
            //     getProductByUnitPrice()
            // });
            // var getProductByUnitPrice = function () {
            //     var selectedValue = $("#ProductId").val();
            //     $.ajax({
            //         url: '@Url.Action("getProductByUnitPrice", "OrderTab")',
            //         type: 'GET',
            //         data: {
            //             ProductId: selectedValue,
            //         },
            //         success: function (data) {

            //             $('#UnitPrice').val(data[0].unitprice)

            //         }
            //     });
            // }



        });


    </script>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }

        .table {
            border-style: groove;
        }


        .container{
            display: flex;
            justify-content: space-evenly;
        }

        .package{
            display: flex;
            justify-content: space-evenly;
        }


        .calculation {
            display: inline-block;
            align-items: right;
            float: inline-end;
        }

        .form-size {
            display: flex;
            flex-direction: row;
        }

        .form-adjust {
            justify-content: space-between;
            display: block;
        }

        .container.form-group {
            display: inline-block;
            align-items: center;
            justify-items: space-between;
        }

        .package.form-group {
            display: inline-block;
            align-items: center;
            justify-items: space-between;
        }
    </style>

</head>
<body>
    <form asp-action="Create" method="post">
        <h5><b>Purchase Order</b></h5>
        <br />
        <div class="container">

            <div class="form-group">
                <label asp-for="OrderNumber" class="control-label"></label>
                <input asp-for="OrderNumber" class="form-control" />
                <span asp-validation-for="OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Customer</label><span class="mandatory"></span>
                @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" id="orderDate" value="@DateTime.Now" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
        </div>
        <br />
        <h5><b>Order Items</b></h5>
        <br />

        <div class="package">
            <div class="form-group">
                <label class="control-label">Products</label><span class="mandatory"></span>
                @Html.DropDownList("ProductId", (IEnumerable<SelectListItem>)ViewBag.ProductId, "--Select--", new { @id = "ProductId", @class = "form-select", required = "required" })
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" id="UnitPrice" class="form-control"  />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="button" id="addItemButton" value="Add Item" class="btn btn-primary h-60"<i class="fa-solid fa-plus"></i>
            </div>
        </div>
        <br />
        <br />
        <table class="table" id="orderedlist">

            <thead>
                <tr>
                    <th>
                        ProductId
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        UnitPrice
                    </th>
                    <th>
                       TotalAmount
                    </th>
                </tr>
            </thead>
             <tbody>
                @* @foreach (var item in ViewBag.OrderTabVM)
                {
                    <tr>
                        <td>
                            <a asp-controller="OrderTab" asp-action="Update" asp-route-id="@item.Id" method="get" class="btn btn-outline-primary">
                                <i class="fa fa-folder" aria-hidden="true"></i>

                            </a>
                        </td>
                        <td>
                            item.Product.Id
                        </td>
                        <td>
                            item.Quantity
                        </td>
                        <td>
                            item.UnitPrice
                        </td>
                        <td>
                            item.SubTotal
                        </td>
                        <td>
                    </tr>
                } *@
            </tbody>


        </table>
        <div class="calculation">
            <div class="form-size">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" value="" id="SubTotal" class="form-control" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="Discount" class="control-label"></label>
                <input asp-for="Discount" id="Discount" class="form-control" />
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="ShippingFee" class="control-label"></label>
                <input asp-for="ShippingFee" id="ShippingFee" class="form-control" />
                <span asp-validation-for="ShippingFee" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="NetTotal" class="control-label"></label>
                <input asp-for="NetTotal" id="NetTotal" class="form-control" readonly />
                <span asp-validation-for="NetTotal" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <label class="control-label">Status</label><span class="mandatory"></span>
                @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="StatusId" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </form>
</body>
</html>