@model ASPNETCoreDbFirst.Models.OrderTabVM

@{
    ViewData["Title"] = "Create";
}

<html lang="en">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            function toggleSubmitButton() {
                var hasProducts = $("#productbody tr").length > 0;

                if (hasProducts) {
                    $("#submitOrderButton").removeClass('btn-red btn-disabled').addClass('btn-green').prop('disabled', false);
                    $("#submitAlert").hide();
                } else {
                    $("#submitOrderButton").removeClass('btn-green btn-disabled').addClass('btn-red').prop('disabled', true);
                    $("#submitAlert").hide();
                }
            }
            toggleSubmitButton();

            $("#orderForm").submit(function (e) {
                e.preventDefault();
                var orderNumber = $("#OrderNumber").val();
                var orderId = $('#OrderId').val();

                if ($("#productbody tr").length === 0) {
                    // Show the alert if there are no products
                    $("#submitAlert").show();
                    return; // Prevent form submission
                }

                $("#submitAlert").hide(); // Hide alert if there are products

                if (!orderId || orderId == 0) {
                    $.getJSON('@Url.Action("CheckOrderNumber", "OrderTab")', { orderNumber: orderNumber, orderId: orderId }, function (data) {
                        if (data.exists) {
                            $("#orderNumberExistsAlert").show();
                        } else {
                            $("#orderForm").off("submit").submit();
                        }
                    });
                } else {
                    $("#orderForm").off("submit").submit();
                }
            });

            // Recalculate NetAmount when Discount or ShippingFee changes
            $('#Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });
            function GetProductByUnitPrice() {
                var selectedValue = $("#ProductId").val();
                $.ajax({
                    url: '@Url.Action("GetProductByUnitPrice", "OrderTab")',
                    type: 'GET',
                    data: {
                        ProductId: selectedValue,
                    },
                    success: function (data) {

                        $('#UnitPrice').val(data[0].unitPrice);

                    }
                });
            }
            function calculateTotalAmount() {
                var quantity = parseInt($('#Quantity').val()) || 0;
                var unitPrice = parseFloat($('#UnitPrice').val()) || 0;
                var totalAmount = quantity * unitPrice;
                $('#SubTotal').val(totalAmount.toFixed(2));
                calculateNetAmount();
            }

            function calculateNetAmount() {
                var subtotal = 0;
                $("#productbody tr").each(function () {
                    var totalAmount = parseFloat($(this).find('td:eq(5)').text()) || 0;
                    subtotal += totalAmount;
                });
                $("#SubTotal").val(subtotal.toFixed(2));
                var subtotal = parseFloat($('#SubTotal').val()) || 0;
                var discount = parseFloat($('#Discount').val()) || 0;
                var shippingFee = parseFloat($('#ShippingFee').val()) || 0;

                var discountAmount = (discount / 100) * subtotal;
                var netAmount = subtotal - discountAmount + shippingFee;

                $('#NetTotal').val(netAmount.toFixed(2));
            }

            $('#SubTotal, #Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });

            $('#ProductId').change(function () {
                GetProductByUnitPrice()
            });

      

            $('#removeproduct').click(function () {
                ProductId: $('#ProductId').val(),

                    $.ajax({
                        url: '/OrderTab/Remove',
                        type: 'POST',
                        data: { productId: ProductId },
                        success: function (response) {
                            // Handle success
                            alert('Record deleted successfully!');
                            // Optionally, remove the deleted record from the DOM
                            toggleSubmitButton();
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            console.error('Error deleting record:', error);
                        }
                    });
            });

       

            $('#addProduct').click(function (event) {
                event.preventDefault();
                var quantity = parseInt($('#Quantity').val()) || 0;
                if (quantity <= 0) {
                    alert("Enter the Correct Quantity.");
                    return;
                }

                var newItem = {
                    ProductId: $('#ProductId').val(),
                    Quantity: quantity,
                    UnitPrice: $('#UnitPrice').val(),
                    TotalAmount: (parseInt($('#Quantity').val()) || 0) * (parseFloat($('#UnitPrice').val()) || 0)
                };


                $.ajax({
                    data: newItem,
                    method: "POST",
                    url: '@Url.Action("AddItem", "OrderTab")',
                    success: function (response) {
                        $("#productbody").empty();
                        var subtotal = 0;
                        $.each(response, function (index, item) {
                            var row = '<tr>' +
                                "<td><input type='button' class = 'editproduct btn btn-outline-primary' value = 'Edit' /> </td>" +
                                "<td><input type='button' class = 'removeproduct btn btn-outline-primary' value = 'Delete' /> </td>" +
                                '<td>' + item.productName + '</td>' +
                                '<td>' + item.quantity + '</td>' +
                                '<td>' + item.unitPrice + '</td>' +
                                '<td>' + item.totalAmount + '</td>' +
                                '</tr>';
                            $("#productbody").append(row);
                            subtotal += item.totalAmount;
                        });
                        $("#SubTotal").val(subtotal.toFixed(2));
                        $('#ProductId').val(''),
                            $('#Quantity').val(''),
                            $('#UnitPrice').val(''),
                            calculateNetAmount();
                        toggleSubmitButton();
                      
                    },
                    error: function (response) {
                        alert('Error adding item.');
                    }
                });
            });

            function clearSessionAndPerformAction(actionUrl) {
                // Send request to clear session
                fetch('@Url.Action("ClearSession", "OrderTab")', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // After clearing session, perform the action
                            window.location.href = actionUrl; // Redirect to the specified URL
                        } else {
                            console.error('Failed to clear session.');
                        }
                    }).catch(error => {
                        console.error('Error clearing session:', error);
                    });
            }

            // Load existing order items if available
            var existingOrderItems = @Html.Raw(ViewBag.OrderItems ?? "[]");
            existingOrderItems = existingOrderItems.length ? existingOrderItems : [];
            if (existingOrderItems.length > 0) {
                $.each(existingOrderItems, function (index, item) {
                    var row = '<tr>' +
                        "<td><input type='button' class = 'editproduct btn btn-outline-primary' value = 'Edit'/> </td>" +
                        "<td><input type='button' class = 'removeproduct btn btn-outline-primary'  value = 'Delete' /> </td>" +
                        '<td>' + item.ProductName + '</td>' +
                        '<td>' + item.Quantity + '</td>' +
                        '<td>' + item.UnitPrice + '</td>' +
                        '<td>' + item.TotalAmount + '</td>' +
                        '</tr>';
                    $("#productbody").append(row);
                });
                $("#SubTotal").val(existingOrderItems.reduce(function (acc, item) { return acc + item.TotalAmount; }, 0).toFixed(2));
                calculateNetAmount();
            }
            $(document).on('click', '.editproduct', function () {
                var row = $(this).closest('tr');
                var productId = row.data('product-id');
                var productName = row.find('td:eq(2)').text();
                var quantity = row.find('td:eq(3)').text();
                var unitPrice = row.find('td:eq(4)').text();

                $('#ProductId').val(productId).trigger('change');
                $('#Quantity').val(quantity);
                $('#UnitPrice').val(unitPrice);
                $('#addProduct').click(function (event) {
                    event.preventDefault();
                });
            });


            $(document).on('click', '.removeproduct', function () {
                var row = $(this).closest('tr');
                var productId = row.data('product-id');

                $.ajax({
                    url: '@Url.Action("RemoveItem", "OrderTab")',
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        $("#productbody").empty();
                        var subtotal = 0;
                        $.each(response, function (index, item) {
                            var row = '<tr data-product-id="' + item.productId + '">' +
                                "<td><input type='button' class='editproduct btn btn-outline-primary' value='Edit' /></td>" +
                                "<td><input type='button' class='removeproduct btn btn-outline-primary' value='Delete' /></td>" +
                                '<td>' + item.productName + '</td>' +
                                '<td>' + item.quantity + '</td>' +
                                '<td>' + item.unitPrice.toFixed(2) + '</td>' +
                                '<td>' + item.totalAmount.toFixed(2) + '</td>' +
                                '</tr>';
                            $("#productbody").append(row);
                            subtotal += item.totalAmount;
                        });
                        $("#SubTotal").val(subtotal.toFixed(2));
                        calculateNetAmount();
                        toggleSubmitButton();
                       
                    },
                    error: function (response) {
                        alert('Error removing item.');
                    }
                });
            });


        });



    </script>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }

        .table {
            border-style: groove;
        }


        .container {
            display: flex;
            justify-content: space-evenly;
        }

        .heading {
            display: flex;
            justify-content: space-between;
        }

        .package {
            display: flex;
            justify-content: space-evenly;
        }


        .calculation {
            display: inline-block;
            align-items: right;
            float: inline-end;
        }

        .form-size {
            display: flex;
            flex-direction: row;
        }

        .form-adjust {
            justify-content: space-between;
            display: block;
        }

        .container.form-group {
            display: inline-block;
            align-items: center;
            justify-items: space-between;
        }

        .package.form-group {
            display: inline-block;
            align-items: center;
            justify-items: space-between;
        }

        .btn-red {
            background-color: red;
            border: none;
            color: white;
        }

        .btn-green {
            background-color: green;
            border: none;
            color: white;
        }

        .btn-disabled {
            background-color: gray;
            border: none;
            color: white;
            cursor: not-allowed;
        }
    </style>

</head>
<body>
    <form id="orderForm" asp-action="Create" method="post">
        <div class="heading">
            <h5><b>Purchase Order</b></h5>
            <a asp-controller="OrderTab" asp-action="List" class="btn btn-primary h-50"><i class="fa fa-bars" aria-hidden="true"></i></a>
        </div>
        <br />
        <div class="container">

            @*  <div class="form-group">
            @*  <label asp-for="OrderNumber"  class="control-label"></label>
            <input type="text" id="OrderNumber" class="form-control" />
            <span id="orderNumberError" class="text-danger"></span>
            <label asp-for="OrderNumber" class="control-label"></label>
            <input asp-for="OrderNumber" class="form-control" />
            <span asp-validation-for="OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
            <label class="control-label">Customer</label><span class="mandatory"></span>
            @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
            <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
            <label asp-for="OrderDate" class="control-label"></label>
            <input asp-for="OrderDate" id="datetime" class="form-control" />
            <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div> *@
            @if (Model.OrderId == 0)
            {
                <div class="form-group">

                    <label asp-for="OrderNumber" class="control-label"></label>
                    <input asp-for="OrderNumber" class="form-control" required />
                    <span asp-validation-for="OrderNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Customer</label><span class="mandatory"></span>
                    @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" id="orderDate" class="form-control" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="OrderNumber" class="control-label"></label>
                    <input asp-for="OrderNumber" class="form-control" required readonly />
                    <span asp-validation-for="OrderNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Customer</label><span class="mandatory"></span>
                    @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required", disabled = "disabled" })
                    <input type="hidden" asp-for="CustomerId" />
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>


                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" id="orderDate" class="form-control" readonly />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
            }
        </div>
        </div>
        <br />
        <h5><b>Order Items</b></h5>
        <br />
        <input type="hidden" id="OrderId" name="OrderId" value="@Model.OrderId" />

        <div class="package" id="option">
            <div class="form-group">
                <label class="control-label">Products</label><span class="mandatory"></span>
                @Html.DropDownList("ProductId", (IEnumerable<SelectListItem>)ViewBag.ProductId, "--Select--", new { @id = "ProductId", @class = "form-select" })
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" id="UnitPrice" class="form-control" readonly />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <br />
                <button id="addProduct" class="btn btn-primary h-60"><i class="fa-solid fa-plus"></i>Add Item</button>
            </div>
        </div>
        <br />
        <br />
        @*         <div id="orderItemsContainer" style="display:none;"> *@
        <table class="table" id="productlist">

            <thead>
                <tr>
                    <th>

                    </th>
                    <th>

                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        UnitPrice
                    </th>
                    <th>
                        TotalAmount
                    </th>

                </tr>
            </thead>
            <tbody id="productbody">
            </tbody>


        </table>
        @* </div> *@
        <div class="calculation">
            <div class="form-size">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" value="" id="SubTotal" class="form-control" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label class="control-label">Discount(%)</label>
                <input asp-for="Discount" id="Discount" class="form-control" />
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="ShippingFee" class="control-label"></label>
                <input asp-for="ShippingFee" id="ShippingFee" class="form-control" />
                <span asp-validation-for="ShippingFee" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="NetTotal" class="control-label"></label>
                <input asp-for="NetTotal" id="NetTotal" class="form-control" readonly />
                <span asp-validation-for="NetTotal" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <label class="control-label">Status</label><span class="mandatory"></span>
                @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="StatusId" class="text-danger"></span>
            </div>
            <div class="alert alert-danger" id="orderNumberExistsAlert" style="display:none;">
                Order number already exists. Please choose a different order number.
            </div>
            <div class="form-adjust">
@*                
 *@                <input type="submit" id="submitOrderButton" value="Save" class="btn btn-red btn-disabled" />
                <div id="submitAlert" class="text-danger" style="display: none; margin-top: 10px;">Please add at least one product before Placing the Order.</div>
            </div>
        </div>
    </form>
</body>
</html>

