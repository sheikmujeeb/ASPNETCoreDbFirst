    @model ASPNETCoreDbFirst.Models.OrderTabVM

    @{
        ViewData["Title"] = "Create";
    }

    <html lang="en">
    <head>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            // $('#OrderNumber').on('input', function () {
            //     var orderNumber = $(this).val();
                
            //     if (orderNumber) {
            //         $.ajax({
            //             url: '@Url.Action("CheckOrderNumber", "OrderTab")',
            //             type: 'POST',
            //             data: { orderNumber: orderNumber },
            //             success: function (response) {
            //                 if (!response) {
            //                     $('#orderNumberExistsAlert').show();
            //                 } else {
            //                     $('#OrderNumber').off("submit").submit();
            //                 }
            //             },
            //             error: function () {
            //                 $('#orderNumberError').text('Error checking order number.');
            //             }
            //         });
            //     } else {
            //         $('#OrderNumber').off("submit").submit();
            //     }
            // });

            $("#orderForm").submit(function (e) {
                e.preventDefault();
                var orderNumber = $("#OrderNumber").val();
                var orderId = $('#OrderId').val();

                if ($("#productbody tr").length === 0) {
                    // Show the alert if there are no products
                    $("#submitAlert").show();
                    return; // Prevent form submission
                }

                $("#submitAlert").hide(); // Hide alert if there are products

                if (!orderId || orderId == 0) {
                    $.getJSON('@Url.Action("CheckOrderNumber", "OrderTab")', { orderNumber: orderNumber, orderId: orderId }, function (data) {
                        if (data.exists) {
                            $("#orderNumberExistsAlert").show();
                        } else {
                            $("#orderForm").off("submit").submit();
                        }
                    });
                } else {
                    $("#orderForm").off("submit").submit();
                }
            });



            let editingItem = null;

            function calculateNetAmount() {
                var subtotal = parseFloat($('#SubTotal').val()) || 0;
                var discountPercentage = parseFloat($('#Discount').val()) || 0;
                var shippingFee = parseFloat($('#ShippingFee').val()) || 0;

                var discountAmount = (discountPercentage / 100) * subtotal;
                var netAmount = subtotal - discountAmount + shippingFee;

                $('#NetTotal').val(netAmount.toFixed(2));
            }

            function calculateAmount() {
                var productId = $('#ProductId').val();
                $.ajax({
                    url: '/OrderTab/GetUnitPrice',
                    type: 'GET',
                    data: { productId: productId },
                    success: function (data) {
                        var unitPrice = parseFloat(data);
                        $('#UnitPrice').val(unitPrice.toFixed(2));
                    },
                    error: function () {
                        alert('Error fetching unit price.');
                    }
                });
            }

            function tablestyle(response) {
                var subtotal = 0;
                $("#productbody").empty();
                $.each(response.items, function (index, item) {
                    if (!item.isDeleted) {
                        var row = '<tr>' +
                            '<td>' + item.productName + '</td>' +
                            '<td>' + item.quantity + '</td>' +
                            '<td>' + item.unitPrice.toFixed(2) + '</td>' +
                            '<td>' + item.totalAmount.toFixed(2) + '</td>' +
                            '<td>' +
                            '<button type="button" class="btn btn-sm btn-primary editItem" data-product-id="' + item.productId + '">Edit</button>' +
                            '<button type="button" class="btn btn-sm btn-danger deleteItem" data-product-id="' + item.productId + '">Delete</button>' +
                            '</td>' +
                            '</tr>';
                        $("#productbody").append(row);
                        subtotal += item.totalAmount;
                    }
                });
                $("#SubTotal").val(subtotal.toFixed(2));
                calculateNetAmount();
                toggleSubmitButton();
            }

            $('#ProductId').change(function () {
                calculateAmount();
            });

            $('#addProduct').click(function (event) {
                event.preventDefault();

                var quantity = parseInt($('#Quantity').val()) || 0;

                if (quantity <= 0) {
                    alert('Please enter a valid quantity.');
                    return;
                }

                var newItem = {
                    ProductId: $('#ProductId').val(),
                    ProductName: $('#ProductId option:selected').text(),
                    Quantity: quantity,
                    UnitPrice: $('#UnitPrice').val(),
                    TotalAmount: quantity * (parseFloat($('#UnitPrice').val()) || 0)
                };

                if (editingItem !== null) {
                    newItem.ProductId = editingItem;
                    $.ajax({
                        data: newItem,
                        method: "POST",
                        url: '@Url.Action("UpdateItem", "OrderTab")',
                        success: function (response) {
                            if (response.success) {
                                tablestyle(response);
                                reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Error updating item.');
                        }
                    });
                } else {
                    var existingRow = $("#productbody tr").filter(function () {
                        return $(this).find('.editItem').data('product-id') == newItem.ProductId;
                    });

                    if (existingRow.length > 0) {
                        var currentQuantity = parseInt(existingRow.find('td:eq(1)').text()) || 0;
                        var newQuantity = currentQuantity + newItem.Quantity;
                        var newTotalAmount = newQuantity * newItem.UnitPrice;

                        newItem.Quantity = newQuantity;
                        newItem.TotalAmount = newTotalAmount;

                        $.ajax({
                            data: newItem,
                            method: "POST",
                            url: '@Url.Action("UpdateItem", "OrderTab")',
                            success: function (response) {
                                if (response.success) {
                                    tablestyle(response);
                                    reload();
                                } else {
                                    alert(response.message);
                                }
                            },
                            error: function () {
                                alert('Error updating item.');
                            }
                        });
                    } else {
                        $.ajax({
                            data: newItem,
                            method: "POST",
                            url: '@Url.Action("AddItem", "OrderTab")',
                            success: function (response) {
                                if (response.success) {
                                    tablestyle(response);
                                    reload();
                                } else {
                                    alert(response.message);
                                }
                            },
                            error: function () {
                                alert('Error adding item.');
                            }
                        });
                    }
                }
            });

            function reload() {
                $('#ProductId').val('');
                $('#Quantity').val(0);
                $('#UnitPrice').val(0.00);
                $('#addproduct').text('Add Item');
                editingItem = null;
            }

            var existingOrderItems = @Html.Raw(ViewBag.OrderItems ?? "[]");
            if (existingOrderItems.length > 0) {
                var subtotal = 0;
                $.each(existingOrderItems, function (index, item) {
                    var row = '<tr>' +
                        '<td>' + item.ProductName + '</td>' +
                        '<td>' + item.Quantity + '</td>' +
                        '<td>' + item.UnitPrice.toFixed(2) + '</td>' +
                        '<td>' + item.TotalAmount.toFixed(2) + '</td>' +
                        '<td>' +
                        '<button type="button" class="btn btn-sm btn-primary editItem" data-product-id="' + item.ProductId + '">Edit</button>' +
                        '<button type="button" class="btn btn-sm btn-danger deleteItem" data-product-id="' + item.ProductId + '">Delete</button>' +
                        '</td>' +
                        '</tr>';
                    $("#productbody").append(row);
                    subtotal += item.TotalAmount;
                });
                $("#SubTotal").val(subtotal.toFixed(2));
                calculateNetAmount();
                toggleSubmitButton();
            }

            $(document).on('click', '.editItem', function () {
                var productId = $(this).data('product-id');
                var row = $(this).closest('tr');
                var productName = row.find('td:eq(0)').text();
                var quantity = row.find('td:eq(1)').text();
                var unitPrice = row.find('td:eq(2)').text();

                $('#ProductId').val(productId).trigger('change');
                $('#Quantity').val(quantity);
                $('#UnitPrice').val(unitPrice);
                $('#addProduct').text('Update Item');
                editingItem = productId;
            });

            $(document).on('click', '.deleteItem', function () {
                var productId = $(this).data('product-id');

                $.ajax({
                    url: '@Url.Action("DeleteItem", "OrderTab")',
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        if (response.success) {
                            tablestyle(response);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error deleting item.");
                    }
                });
            });

            function toggleSubmitButton() {
                if ($('#productbody tr').length > 0) {
                    $('#submitOrderButton').removeClass('btn-red btn-disabled').addClass('btn-green').prop('disabled', false);
                } else {
                    $('#submitOrderButton').removeClass('btn-green').addClass('btn-red btn-disabled').prop('disabled', true);
                }
            }


            $('#orderForm').submit(function (event) {
                var discount = $('#Discount').val();
                var shippingFee = $('#ShippingFee').val();
      
                if (!discount) {
                    $('#Discount').val(0);
                }tpr
                if (!shippingFee) {
                    $('#ShippingFee').val(0);
                }
                if ($('#productbody tr').length === 0) {
                    event.preventDefault();
                    alert('Please add at least one order item.');
                }
            });

            // Recalculate NetAmount when Discount or ShippingFee changes
            $('#Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });

            toggleSubmitButton();
        });


    </script>

    <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">

        <style>
            body {
                font-family: Arial, sans-serif;
                margin: 50px;
            }

            .table {
                border-style: groove;
            }


            .container {
                display: flex;
                justify-content: space-evenly;
            }

            .heading {
                display: flex;
                justify-content: space-between;
            }

            .package {
                display: flex;
                justify-content: space-evenly;
            }


            .calculation {
                display: inline-block;
                align-items: right;
                float: inline-end;
            }

            .form-size {
                display: flex;
                flex-direction: row;
            }

            .form-adjust {
                justify-content: space-between;
                display: block;
            }

            .container.form-group {
                display: inline-block;
                align-items: center;
                justify-items: space-between;
            }

            .package.form-group {
                display: inline-block;
                align-items: center;
                justify-items: space-between;
            }

            .btn-green {
                background-color: green;
                border: none;
                color: white;
            }

            .btn-disabled {
            background-color: red;
                border: none;
                color: white;
                cursor: not-allowed;
            }
        </style>

    </head>
    <body>
        <form id="orderForm" asp-action="Create" method="post">
            <div class="heading">
                <h5><b>Purchase Order</b></h5>
                <a asp-controller="OrderTab" asp-action="List" class="btn btn-primary h-50"><i class="fa fa-bars" aria-hidden="true"></i></a>
            </div>
            <br />
            <div class="container">

                @*  <div class="form-group">
                @*  <label asp-for="OrderNumber"  class="control-label"></label>
                <input type="text" id="OrderNumber" class="form-control" />
                <span id="orderNumberError" class="text-danger"></span>
                <label asp-for="OrderNumber" class="control-label"></label>
                <input asp-for="OrderNumber" class="form-control" />
                <span asp-validation-for="OrderNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label class="control-label">Customer</label><span class="mandatory"></span>
                @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" id="datetime" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div> *@
                @if (Model.OrderId == 0)
                {
                    <div class="form-group">

                        <label asp-for="OrderNumber" class="control-label"></label>
                        <input asp-for="OrderNumber" class="form-control" required />
                        <span asp-validation-for="OrderNumber" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Customer</label><span class="mandatory"></span>
                        @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="OrderDate" class="control-label"></label>
                        <input asp-for="OrderDate" id="orderDate" class="form-control" />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label asp-for="OrderNumber" class="control-label"></label>
                        <input asp-for="OrderNumber" class="form-control" required readonly />
                        <span asp-validation-for="OrderNumber" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Customer</label><span class="mandatory"></span>
                        @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required", disabled = "disabled" })
                        <input type="hidden" asp-for="CustomerId" />
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label asp-for="OrderDate" class="control-label"></label>
                        <input asp-for="OrderDate" id="orderDate" class="form-control" readonly />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                }
            </div>
            </div>
            <br />
            <h5><b>Order Items</b></h5>
            <br />
            <input type="hidden" id="OrderId" name="OrderId" value="@Model.OrderId" />

            <div class="package" id="option">
                <div class="form-group">
                    <label class="control-label">Products(Add Aleast One)</label><span class="mandatory"></span>
                    @Html.DropDownList("ProductId", (IEnumerable<SelectListItem>)ViewBag.ProductId, "--Select--", new { @id = "ProductId", @class = "form-select" })
                    <span asp-validation-for="ProductId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="UnitPrice" class="control-label"></label>
                    <input asp-for="UnitPrice" id="UnitPrice" class="form-control" readonly />
                    <span asp-validation-for="UnitPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <br />
                    <button id="addProduct" class="btn btn-primary h-60"><i class="fa-solid fa-plus"></i>Add Item</button>
                </div>
            </div>
            <br />
            <br />
        
            <table class="table" id="productlist">

                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            UnitPrice
                        </th>
                        <th>
                            TotalAmount
                        </th>
                    <th>

                    </th>
                    <th>

                    </th>

                    </tr>
                </thead>
                <tbody id="productbody">

                </tbody>


            </table>
            @* </div> *@
            <div class="calculation">
                <div class="form-size">
                    <label asp-for="SubTotal" class="control-label"></label>
                    <input asp-for="SubTotal" value="" id="SubTotal" class="form-control" readonly />
                    <span asp-validation-for="SubTotal" class="text-danger"></span>
                </div>
                <div class="form-size">
                    <label class="control-label">Discount(%)</label>
                    <input asp-for="Discount" id="Discount" class="form-control" />
                    <span asp-validation-for="Discount" class="text-danger"></span>
                </div>
                <div class="form-size">
                    <label asp-for="ShippingFee" class="control-label"></label>
                    <input asp-for="ShippingFee" id="ShippingFee" class="form-control" />
                    <span asp-validation-for="ShippingFee" class="text-danger"></span>
                </div>
                <div class="form-size">
                    <label asp-for="NetTotal" class="control-label"></label>
                    <input asp-for="NetTotal" id="NetTotal" class="form-control" readonly />
                    <span asp-validation-for="NetTotal" class="text-danger"></span>
                </div>
                <div class="form-adjust">
                    <label class="control-label">Status</label><span class="mandatory"></span>
                    @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusId, "--Select--", new { @class = "form-select", required = "required" })
                    <span asp-validation-for="StatusId" class="text-danger"></span>
                </div>
                <div class="alert alert-danger" id="orderNumberExistsAlert" style="display:none;">
                    Order number already exists. Please choose a different order number.
                </div>
                <div class="form-adjust">
                <input type="submit" id="submitOrderButton" value="Save" class="btn btn-red btn-disabled" />
                <div id="submitAlert" class="text-danger" style="display: none; margin-top: 10px;">Please add product before Placing the Order.</div>
            </div>
            </div>
        </form>
    </body>
    </html>

